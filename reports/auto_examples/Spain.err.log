Traceback (most recent call last):
  File "/opt/hostedtoolcache/Python/3.10.16/x64/lib/python3.10/site-packages/jupyter_cache/executors/utils.py", line 58, in single_nb_execution
    executenb(
  File "/opt/hostedtoolcache/Python/3.10.16/x64/lib/python3.10/site-packages/nbclient/client.py", line 1319, in execute
    return NotebookClient(nb=nb, resources=resources, km=km, **kwargs).execute()
  File "/opt/hostedtoolcache/Python/3.10.16/x64/lib/python3.10/site-packages/jupyter_core/utils/__init__.py", line 165, in wrapped
    return loop.run_until_complete(inner)
  File "/opt/hostedtoolcache/Python/3.10.16/x64/lib/python3.10/asyncio/base_events.py", line 649, in run_until_complete
    return future.result()
  File "/opt/hostedtoolcache/Python/3.10.16/x64/lib/python3.10/site-packages/nbclient/client.py", line 709, in async_execute
    await self.async_execute_cell(
  File "/opt/hostedtoolcache/Python/3.10.16/x64/lib/python3.10/site-packages/nbclient/client.py", line 1062, in async_execute_cell
    await self._check_raise_for_error(cell, cell_index, exec_reply)
  File "/opt/hostedtoolcache/Python/3.10.16/x64/lib/python3.10/site-packages/nbclient/client.py", line 918, in _check_raise_for_error
    raise CellExecutionError.from_cell_and_msg(cell, exec_reply_content)
nbclient.exceptions.CellExecutionError: An error occurred while executing the following cell:
------------------
# pooch_Majadas = pooch.create(
#     path=pooch.os_cache("Majadas_project"),
#     base_url="https://github.com/BenjMy/test_Majadas_centum_dataset/raw/refs/heads/main/",
#     registry={
#         "20200403_LEVEL2_ECMWF_TPday.tif": None,
#         "ETa_Majadas.netcdf": None,
#         "ETp_Majadas.netcdf": None,
#         "CLCover_Majadas.netcdf": None,
#     },
# )

# pooch_Majadas = pooch.create(
#     path=pooch.os_cache("Majadas_project"),
#     base_url="https://github.com/BenjMy/test_Majadas_centum_dataset/raw/refs/heads/main/",
#     registry={
#         "ETa_Majadas.netcdf": None,
#         "ETp_Majadas.netcdf": None,
#         "CLC_Majadas_clipped.shp": None,
#         "CLC_Majadas_clipped.shx": None,
#         "CLC_Majadas_clipped.dbf": None,
#     },
# )

# Majadas_ETa_dataset = pooch_Majadas.fetch('ETa_Majadas.netcdf')
# Majadas_ETp_dataset = pooch_Majadas.fetch('ETp_Majadas.netcdf')
# Majadas_CLC_dataset = pooch_Majadas.fetch('CLCover_Majadas.netcdf')

print('loading datasets')

Majadas_ETa_dataset = rootPathData/'ETa_Majadas_H2Bassin.netcdf'
Majadas_ETp_dataset = rootPathData/'ETp_Majadas_H2Bassin.netcdf'
Majadas_CLC_dataset = rootPathData/'CLCover_Majadas.netcdf'
Majadas_rain_dataset = rootPathData/'RAIN_Majadas_H2Bassin.netcdf'

Majadas_CLC_gdf = gpd.read_file(rootPathData/'BassinH2_Majadas_corrected.shp')

ETa_ds = xr.load_dataset(Majadas_ETa_dataset)
ETa_ds = ETa_ds.rename({"__xarray_dataarray_variable__": "ETa"})  # Rename the main variable to 'ETa'

ETp_ds = xr.load_dataset(Majadas_ETp_dataset)
ETp_ds = ETp_ds.rename({"__xarray_dataarray_variable__": "ETp"})  # Rename the main variable to 'ETa'

CLC = xr.load_dataset(Majadas_CLC_dataset)  # Load the CLC dataset
------------------

----- stdout -----
loading datasets
------------------

[0;31m---------------------------------------------------------------------------[0m
[0;31mDataSourceError[0m                           Traceback (most recent call last)
Cell [0;32mIn[2], line 35[0m
[1;32m     32[0m Majadas_CLC_dataset [38;5;241m=[39m rootPathData[38;5;241m/[39m[38;5;124m'[39m[38;5;124mCLCover_Majadas.netcdf[39m[38;5;124m'[39m
[1;32m     33[0m Majadas_rain_dataset [38;5;241m=[39m rootPathData[38;5;241m/[39m[38;5;124m'[39m[38;5;124mRAIN_Majadas_H2Bassin.netcdf[39m[38;5;124m'[39m
[0;32m---> 35[0m Majadas_CLC_gdf [38;5;241m=[39m [43mgpd[49m[38;5;241;43m.[39;49m[43mread_file[49m[43m([49m[43mrootPathData[49m[38;5;241;43m/[39;49m[38;5;124;43m'[39;49m[38;5;124;43mBassinH2_Majadas_corrected.shp[39;49m[38;5;124;43m'[39;49m[43m)[49m
[1;32m     37[0m ETa_ds [38;5;241m=[39m xr[38;5;241m.[39mload_dataset(Majadas_ETa_dataset)
[1;32m     38[0m ETa_ds [38;5;241m=[39m ETa_ds[38;5;241m.[39mrename({[38;5;124m"[39m[38;5;124m__xarray_dataarray_variable__[39m[38;5;124m"[39m: [38;5;124m"[39m[38;5;124mETa[39m[38;5;124m"[39m})  [38;5;66;03m# Rename the main variable to 'ETa'[39;00m

File [0;32m/opt/hostedtoolcache/Python/3.10.16/x64/lib/python3.10/site-packages/geopandas/io/file.py:294[0m, in [0;36m_read_file[0;34m(filename, bbox, mask, columns, rows, engine, **kwargs)[0m
[1;32m    291[0m             from_bytes [38;5;241m=[39m [38;5;28;01mTrue[39;00m
[1;32m    293[0m [38;5;28;01mif[39;00m engine [38;5;241m==[39m [38;5;124m"[39m[38;5;124mpyogrio[39m[38;5;124m"[39m:
[0;32m--> 294[0m     [38;5;28;01mreturn[39;00m [43m_read_file_pyogrio[49m[43m([49m
[1;32m    295[0m [43m        [49m[43mfilename[49m[43m,[49m[43m [49m[43mbbox[49m[38;5;241;43m=[39;49m[43mbbox[49m[43m,[49m[43m [49m[43mmask[49m[38;5;241;43m=[39;49m[43mmask[49m[43m,[49m[43m [49m[43mcolumns[49m[38;5;241;43m=[39;49m[43mcolumns[49m[43m,[49m[43m [49m[43mrows[49m[38;5;241;43m=[39;49m[43mrows[49m[43m,[49m[43m [49m[38;5;241;43m*[39;49m[38;5;241;43m*[39;49m[43mkwargs[49m
[1;32m    296[0m [43m    [49m[43m)[49m
[1;32m    298[0m [38;5;28;01melif[39;00m engine [38;5;241m==[39m [38;5;124m"[39m[38;5;124mfiona[39m[38;5;124m"[39m:
[1;32m    299[0m     [38;5;28;01mif[39;00m pd[38;5;241m.[39mapi[38;5;241m.[39mtypes[38;5;241m.[39mis_file_like(filename):

File [0;32m/opt/hostedtoolcache/Python/3.10.16/x64/lib/python3.10/site-packages/geopandas/io/file.py:547[0m, in [0;36m_read_file_pyogrio[0;34m(path_or_bytes, bbox, mask, rows, **kwargs)[0m
[1;32m    538[0m     warnings[38;5;241m.[39mwarn(
[1;32m    539[0m         [38;5;124m"[39m[38;5;124mThe [39m[38;5;124m'[39m[38;5;124minclude_fields[39m[38;5;124m'[39m[38;5;124m and [39m[38;5;124m'[39m[38;5;124mignore_fields[39m[38;5;124m'[39m[38;5;124m keywords are deprecated, and [39m[38;5;124m"[39m
[1;32m    540[0m         [38;5;124m"[39m[38;5;124mwill be removed in a future release. You can use the [39m[38;5;124m'[39m[38;5;124mcolumns[39m[38;5;124m'[39m[38;5;124m keyword [39m[38;5;124m"[39m
[0;32m   (...)[0m
[1;32m    543[0m         stacklevel[38;5;241m=[39m[38;5;241m3[39m,
[1;32m    544[0m     )
[1;32m    545[0m     kwargs[[38;5;124m"[39m[38;5;124mcolumns[39m[38;5;124m"[39m] [38;5;241m=[39m kwargs[38;5;241m.[39mpop([38;5;124m"[39m[38;5;124minclude_fields[39m[38;5;124m"[39m)
[0;32m--> 547[0m [38;5;28;01mreturn[39;00m [43mpyogrio[49m[38;5;241;43m.[39;49m[43mread_dataframe[49m[43m([49m[43mpath_or_bytes[49m[43m,[49m[43m [49m[43mbbox[49m[38;5;241;43m=[39;49m[43mbbox[49m[43m,[49m[43m [49m[38;5;241;43m*[39;49m[38;5;241;43m*[39;49m[43mkwargs[49m[43m)[49m

File [0;32m/opt/hostedtoolcache/Python/3.10.16/x64/lib/python3.10/site-packages/pyogrio/geopandas.py:265[0m, in [0;36mread_dataframe[0;34m(path_or_buffer, layer, encoding, columns, read_geometry, force_2d, skip_features, max_features, where, bbox, mask, fids, sql, sql_dialect, fid_as_index, use_arrow, on_invalid, arrow_to_pandas_kwargs, **kwargs)[0m
[1;32m    260[0m [38;5;28;01mif[39;00m [38;5;129;01mnot[39;00m use_arrow:
[1;32m    261[0m     [38;5;66;03m# For arrow, datetimes are read as is.[39;00m
[1;32m    262[0m     [38;5;66;03m# For numpy IO, datetimes are read as string values to preserve timezone info[39;00m
[1;32m    263[0m     [38;5;66;03m# as numpy does not directly support timezones.[39;00m
[1;32m    264[0m     kwargs[[38;5;124m"[39m[38;5;124mdatetime_as_string[39m[38;5;124m"[39m] [38;5;241m=[39m [38;5;28;01mTrue[39;00m
[0;32m--> 265[0m result [38;5;241m=[39m [43mread_func[49m[43m([49m
[1;32m    266[0m [43m    [49m[43mpath_or_buffer[49m[43m,[49m
[1;32m    267[0m [43m    [49m[43mlayer[49m[38;5;241;43m=[39;49m[43mlayer[49m[43m,[49m
[1;32m    268[0m [43m    [49m[43mencoding[49m[38;5;241;43m=[39;49m[43mencoding[49m[43m,[49m
[1;32m    269[0m [43m    [49m[43mcolumns[49m[38;5;241;43m=[39;49m[43mcolumns[49m[43m,[49m
[1;32m    270[0m [43m    [49m[43mread_geometry[49m[38;5;241;43m=[39;49m[43mread_geometry[49m[43m,[49m
[1;32m    271[0m [43m    [49m[43mforce_2d[49m[38;5;241;43m=[39;49m[43mgdal_force_2d[49m[43m,[49m
[1;32m    272[0m [43m    [49m[43mskip_features[49m[38;5;241;43m=[39;49m[43mskip_features[49m[43m,[49m
[1;32m    273[0m [43m    [49m[43mmax_features[49m[38;5;241;43m=[39;49m[43mmax_features[49m[43m,[49m
[1;32m    274[0m [43m    [49m[43mwhere[49m[38;5;241;43m=[39;49m[43mwhere[49m[43m,[49m
[1;32m    275[0m [43m    [49m[43mbbox[49m[38;5;241;43m=[39;49m[43mbbox[49m[43m,[49m
[1;32m    276[0m [43m    [49m[43mmask[49m[38;5;241;43m=[39;49m[43mmask[49m[43m,[49m
[1;32m    277[0m [43m    [49m[43mfids[49m[38;5;241;43m=[39;49m[43mfids[49m[43m,[49m
[1;32m    278[0m [43m    [49m[43msql[49m[38;5;241;43m=[39;49m[43msql[49m[43m,[49m
[1;32m    279[0m [43m    [49m[43msql_dialect[49m[38;5;241;43m=[39;49m[43msql_dialect[49m[43m,[49m
[1;32m    280[0m [43m    [49m[43mreturn_fids[49m[38;5;241;43m=[39;49m[43mfid_as_index[49m[43m,[49m
[1;32m    281[0m [43m    [49m[38;5;241;43m*[39;49m[38;5;241;43m*[39;49m[43mkwargs[49m[43m,[49m
[1;32m    282[0m [43m[49m[43m)[49m
[1;32m    284[0m [38;5;28;01mif[39;00m use_arrow:
[1;32m    285[0m     meta, table [38;5;241m=[39m result

File [0;32m/opt/hostedtoolcache/Python/3.10.16/x64/lib/python3.10/site-packages/pyogrio/raw.py:198[0m, in [0;36mread[0;34m(path_or_buffer, layer, encoding, columns, read_geometry, force_2d, skip_features, max_features, where, bbox, mask, fids, sql, sql_dialect, return_fids, datetime_as_string, **kwargs)[0m
[1;32m     59[0m [38;5;250m[39m[38;5;124;03m"""Read OGR data source into numpy arrays.[39;00m
[1;32m     60[0m 
[1;32m     61[0m [38;5;124;03mIMPORTANT: non-linear geometry types (e.g., MultiSurface) are converted[39;00m
[0;32m   (...)[0m
[1;32m    194[0m 
[1;32m    195[0m [38;5;124;03m"""[39;00m
[1;32m    196[0m dataset_kwargs [38;5;241m=[39m _preprocess_options_key_value(kwargs) [38;5;28;01mif[39;00m kwargs [38;5;28;01melse[39;00m {}
[0;32m--> 198[0m [38;5;28;01mreturn[39;00m [43mogr_read[49m[43m([49m
[1;32m    199[0m [43m    [49m[43mget_vsi_path_or_buffer[49m[43m([49m[43mpath_or_buffer[49m[43m)[49m[43m,[49m
[1;32m    200[0m [43m    [49m[43mlayer[49m[38;5;241;43m=[39;49m[43mlayer[49m[43m,[49m
[1;32m    201[0m [43m    [49m[43mencoding[49m[38;5;241;43m=[39;49m[43mencoding[49m[43m,[49m
[1;32m    202[0m [43m    [49m[43mcolumns[49m[38;5;241;43m=[39;49m[43mcolumns[49m[43m,[49m
[1;32m    203[0m [43m    [49m[43mread_geometry[49m[38;5;241;43m=[39;49m[43mread_geometry[49m[43m,[49m
[1;32m    204[0m [43m    [49m[43mforce_2d[49m[38;5;241;43m=[39;49m[43mforce_2d[49m[43m,[49m
[1;32m    205[0m [43m    [49m[43mskip_features[49m[38;5;241;43m=[39;49m[43mskip_features[49m[43m,[49m
[1;32m    206[0m [43m    [49m[43mmax_features[49m[38;5;241;43m=[39;49m[43mmax_features[49m[43m [49m[38;5;129;43;01mor[39;49;00m[43m [49m[38;5;241;43m0[39;49m[43m,[49m
[1;32m    207[0m [43m    [49m[43mwhere[49m[38;5;241;43m=[39;49m[43mwhere[49m[43m,[49m
[1;32m    208[0m [43m    [49m[43mbbox[49m[38;5;241;43m=[39;49m[43mbbox[49m[43m,[49m
[1;32m    209[0m [43m    [49m[43mmask[49m[38;5;241;43m=[39;49m[43m_mask_to_wkb[49m[43m([49m[43mmask[49m[43m)[49m[43m,[49m
[1;32m    210[0m [43m    [49m[43mfids[49m[38;5;241;43m=[39;49m[43mfids[49m[43m,[49m
[1;32m    211[0m [43m    [49m[43msql[49m[38;5;241;43m=[39;49m[43msql[49m[43m,[49m
[1;32m    212[0m [43m    [49m[43msql_dialect[49m[38;5;241;43m=[39;49m[43msql_dialect[49m[43m,[49m
[1;32m    213[0m [43m    [49m[43mreturn_fids[49m[38;5;241;43m=[39;49m[43mreturn_fids[49m[43m,[49m
[1;32m    214[0m [43m    [49m[43mdataset_kwargs[49m[38;5;241;43m=[39;49m[43mdataset_kwargs[49m[43m,[49m
[1;32m    215[0m [43m    [49m[43mdatetime_as_string[49m[38;5;241;43m=[39;49m[43mdatetime_as_string[49m[43m,[49m
[1;32m    216[0m [43m[49m[43m)[49m

File [0;32mpyogrio/_io.pyx:1240[0m, in [0;36mpyogrio._io.ogr_read[0;34m()[0m

File [0;32mpyogrio/_io.pyx:220[0m, in [0;36mpyogrio._io.ogr_open[0;34m()[0m

[0;31mDataSourceError[0m: /home/ben/Nextcloud/BenCSIC/Codes/tech4agro/test_Majadas_centum_dataset/BassinH2_Majadas_corrected.shp: No such file or directory

